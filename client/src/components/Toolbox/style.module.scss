@import 'variables';

.wrapper {
	padding: $border-padding;
	border-radius: 0px $border-radius 0px 0px;
	border: 1px solid $shadowColor;
	// box-shadow: 5px 0px 10px $shadowColor;

	// border: 2px solid red;

	position: absolute;
	top: 8vh;
	left: 0;
	bottom: 0;
	z-index: 1;
	max-width: 30%;

	display: flex;
	flex-direction: column;
	justify-content: space-between;
	gap: $gap;

	transition: all 0.5s ease-in-out;

	.toolicon {
		position: absolute;
		top: 1%;
		right: 0;
		font-size: 2.5vh;
		color: $textColor2;
		transform: translate(100%, 0);
		cursor: pointer;
		transition: var(--transition);
		&:hover {
			color: $textColor3;
			font-size: $iconSizeHover;
		}
		@media (max-height: 768px) {
			font-size: 5vh;
			&:hover {
				font-size: 6vh;
			}
		}
	}

	@media (max-height: 768px) {
		max-width: 40%;
	}
}

.hide {
	transform: translateX(-100%);
}
.show {
	display: flex;
}
.hide2 {
	display: none;
}
.container {
	/* Styles for the main toolbox container */
	flex-grow: 7;
	max-height: 90%;
	width: 100%;
	// border: 2px solid blue;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	gap: $gap;

	.heading {
		flex-grow: 3;
		max-height: 30%;

		display: flex;
		flex-direction: column;
		justify-content: space-between;
		align-items: center;
		// gap: calc($gap/2);

		padding: $border-padding;
		border-radius: $border-radius;
		$border-shadow: 5px 5px 10px rgba(0, 0, 0, 0.1);
		border: 1px solid $themeInverseColor;
		color: $textColor2;

		@media (max-height: 768px) {
			max-height: 150px;
		}

		// border: 2px solid red;

		.button {
			display: flex;
			justify-content: center;
			align-items: center;
			// width: 90%;
			cursor: pointer;

			border-radius: $border-radius;
			border: 0.2vw solid $themeInverseColor;
			padding: 0.4vh 0.4vw;
			font-size: $fontSize3;
			background-color: $primaryColor3;
			color: $white;
			transition: all 0.4s;

			&:focus {
				outline: none;
			}

			&:disabled {
				cursor: not-allowed;
				background-color: $textColor3;
				color: $textInverse;
			}
			&:not(:disabled):hover {
				background-color: darken($primaryColor3, 10%);
			}
		}

		.roomName {
			display: flex;
			justify-content: center;
			align-items: center;
			gap: 0.5vw;

			padding: 0.4vh 0.4vw;
			background-color: $primaryColor4;
			border-radius: $border-radius;
			// width: 100%;
			color: $white;
			font-size: $fontSize3;
			p {
				color: $white;
			}
			:nth-child(1) {
				font-style: bold;
			}
			:nth-child(2) {
				font-style: italic;
			}
			&:hover {
				background-color: lighten($primaryColor4, 10%);
			}
		}
		.share {
			display: flex;
			width: 100%;
			justify-content: center;
			gap: calc($gap/2);
			button {
				flex-grow: 1;
			}
		}
		.connected {
			width: 100%;
			font-size: $fontSize2;
			background-color: $green;
		}
		.disconnected {
			width: 100%;
			font-size: $fontSize2;
			background-color: $red;
		}
	}

	.toolbox {
		flex-grow: 7;
		max-height: 70%;

		display: flex;
		flex-direction: column;
		justify-content: space-between;

		// border: 2px solid red;/

		label {
			color: $textColor2;
		}

		.tools {
			display: flex;
			flex-direction: column;
			// justify-content: center;
			text-align: center;
			span {
				display: flex;
				justify-content: space-evenly;
			}

			button {
				display: flex;
				justify-content: center;
				align-items: center;
				cursor: pointer;

				background-color: $primaryColor3;
				border-radius: $border-radius;
				border: 0.2vw solid $themeInverseColor;
				font-size: $fontSize2;
				color: white;

				width: 40px;
				height: 30px;

				transition: all 0.4s;

				&:focus {
					outline: none;
				}

				&:disabled {
					cursor: not-allowed;
					background-color: $textColor3;
					color: $textInverse;
				}
				&:not(:disabled):hover {
					background-color: darken($primaryColor3, 10%);
				}
			}
			.active {
				background-color: darken($primaryColor3, 10%);
				color: $textInverse;
			}
		}

		.lineWidth {
			display: flex;
			justify-content: space-evenly;

			input {
				max-width: 50px;
			}
		}

		.color {
			display: flex;
			justify-content: space-evenly;
		}

		.buttonsSection {
			/* Styles for the buttons section */
			display: flex;
			justify-content: space-around;
			gap: calc($gap/2);

			.button {
				flex-grow: 1;
				display: flex;
				justify-content: space-evenly;
				align-items: center;
				// width: 90%;
				cursor: pointer;

				border-radius: $border-radius;
				border: 0.2vw solid $themeInverseColor;
				height: 30px;
				padding: 0.1vh 0.1vw;
				font-size: $fontSize3;
				background-color: $primaryColor3;
				color: white;
				transition: all 0.4s;

				&:focus {
					outline: none;
				}

				&:disabled {
					cursor: not-allowed;
					background-color: $textColor3;
					// color: $textInverse;
				}
				&:not(:disabled):hover {
					background-color: darken($primaryColor3, 10%);
				}
			}
		}
	}
}

.userdiv {
	flex-grow: 3;
	max-height: 35%;
	border: 2px solid red;

	border-radius: $border-radius;
	border: 1px solid $themeInverseColor;
	padding: $border-padding;
	$border-shadow: 5px 5px 10px rgba(0, 0, 0, 0.1);
	color: $textColor2;
	font-size: $fontSize2;

	.users {
		overflow: auto;
		max-height: 90%;
		li {
			display: flex;
			justify-content: space-between;
			align-items: center;

			padding: 0.4vh 0.4vw;
			border-radius: $border-radius;
			p {
				font-size: $fontSize3;
			}
			:nth-child(1) {
				font-style: bold;
			}
			:nth-child(2) {
				font-style: italic;
			}
		}
		li + li {
			margin-top: 0.5vh;
		}
		.green {
			background-color: $green;
			&:hover {
				background-color: lighten($green, 10%);
			}
		}
		.red {
			background-color: $red;
			&:hover {
				background-color: lighten($red, 10%);
			}
		}
	}
}
